// 使用 Vite 的 glob 匯入功能批次匯入圖片
const imageModules = import.meta.glob('@/assets/images/cards/*.webp', { eager: true })

// 依照前綴分類圖片並排序
const categorizeImages = () => {
  const categories = {
    care: [], // 我重視 I Care
    le: [], // 我喜歡 I Like - 國小版
    lj: [], // 我喜歡 I Like - 國中版
    ce: [], // 我可以 I Can - 國小版
    cj: [], // 我可以 I Can - 國中版
    goal: [] // 我就是 I Goal - 職業牌卡
  }

  Object.entries(imageModules).forEach(([path, module]) => {
    const fileName = path.split('/').pop() // 取得檔案名稱
    const prefix = fileName.match(/^[a-z]+/)[0] // 取得前綴
    if (categories[prefix]) {
      categories[prefix].push({
        path: module.default,
        number: parseInt(fileName.match(/\d+/)[0])
      })
    }
  })

  // 對每個類別進行排序
  Object.keys(categories).forEach(key => {
    categories[key].sort((a, b) => a.number - b.number)
    categories[key] = categories[key].map(item => item.path)
  })

  return categories
}

const {
  care: careImages,
  le: leImages,
  lj: ljImages,
  ce: ceImages,
  cj: cjImages,
  goal: goalImages
} = categorizeImages()

// Fisher-Yates 洗牌演算法
const shuffleArray = (array) => {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}

// 組合並隨機洗牌卡片
const combineAndShuffle = (...arrays) => {
  // 如果第一個參數是陣列的陣列，則展開它
  const cardArrays = Array.isArray(arrays[0]) ? arrays[0] : arrays;
  
  // 將所有陣列合併成一個
  const combinedCards = cardArrays.reduce((acc, curr) => acc.concat(curr), []);
  
  // 回傳洗牌後的陣列
  return shuffleArray([...combinedCards]);
}

const getCardImageName = (imageUrl) => {
  const cleanUrl = imageUrl.split('?')[0]
  const fullFileName = cleanUrl.split('/').pop() // 完整檔案名（含副檔名）
  const fileName = fullFileName.replace('.webp', '') // 不含副檔名
  const cardName = fileName.split('-')[0]
  return cardName
}

// 根據卡片名稱返回對應的封面圖片
const getCardCoverImage = (cardName) => {
  // 使用正則表達式提取前綴和序號
  const match = cardName.match(/^([a-zA-Z]{2,4})(\d{3})$/);
  
  if (!match) {
    return null; // 如果格式不正確，返回 null
  }

  const prefix = match[1]; // 提取前綴
  const index = parseInt(match[2]); // 提取序號

  const coverMapping = {
    le: {
      1: 'general_a',
      2: 'general_r',
      3: 'general_e',
      4: 'general_c',
      5: 'general_s',
      6: 'general_r',
      7: 'general_a',
      8: 'general_r',
      9: 'general_s',
      10: 'general_e',
      11: 'general_a',
      12: 'general_s',
      13: 'general_s',
      14: 'general_r',
      15: 'general_i',
      16: 'general_s',
      17: 'general_a',
      18: 'general_r',
      19: 'general_s',
      20: 'general_r',
      21: 'general_i',
      22: 'general_e',
      23: 'general_a',
      24: 'general_a',
      25: 'general_s',
      26: 'general_i',
      27: 'general_e',
      28: 'general_e',
      29: 'general_c',
      30: 'general_r',
      31: 'general_e',
      32: 'general_r',
      33: 'general_i',
      34: 'general_e',
      35: 'general_c',
      36: 'general_e',
      37: 'general_e',
      38: 'general_i',
      39: 'general_i',
      40: 'general_c',
      41: 'general_c',
      42: 'general_s',
      43: 'general_e',
      44: 'general_i',
      45: 'general_i',
      46: 'general_c',
      47: 'general_a',
      48: 'general_s',
      49: 'general_a',
      50: 'general_c',
      51: 'general_i',
      52: 'general_i',
      53: 'general_e',
      54: 'general_s',
      55: 'general_c',
      56: 'general_c',
      57: 'general_r',
      58: 'general_c',
      59: 'general_a',
      60: 'general_s',
    },
    lj: {
      1: 'general_e',
      2: 'general_a',
      3: 'general_s',
      4: 'general_s',
      5: 'general_r',
      6: 'general_i',
      7: 'general_s',
      8: 'general_a',
      9: 'general_r',
      10: 'general_s',
      11: 'general_r',
      12: 'general_r',
      13: 'general_i',
      14: 'general_e',
      15: 'general_a',
      16: 'general_a',
      17: 'general_s',
      18: 'general_i',
      19: 'general_e',
      20: 'general_e',
      21: 'general_c',
      22: 'general_e',
      23: 'general_r',
      24: 'general_e',
      25: 'general_r',
      26: 'general_i',
      27: 'general_e',
      28: 'general_c',
      29: 'general_e',
      30: 'general_e',
      31: 'general_i',
      32: 'general_i',
      33: 'general_c',
      34: 'general_c',
      35: 'general_c',
      36: 'general_s',
      37: 'general_e',
      38: 'general_i',
      39: 'general_i',
      40: 'general_c',
      41: 'general_a',
      42: 'general_s',
      43: 'general_a',
      44: 'general_s',
      45: 'general_c',
      46: 'general_i',
      47: 'general_i',
      48: 'general_e',
      49: 'general_s',
      50: 'general_c',
      51: 'general_c',
      52: 'general_r',
      53: 'general_c',
      54: 'general_a',
      55: 'general_r',
      56: 'general_s',
      57: 'general_a',
      58: 'general_r',
      59: 'general_s',
      60: 'general_a',
    },
    ce: {
      1: 'general_r',
      2: 'general_e',
      3: 'general_c',
      4: 'general_s',
      5: 'general_r',
      6: 'general_a',
      7: 'general_r',
      8: 'general_s',
      9: 'general_e',
      10: 'general_a',
      11: 'general_s',
      12: 'general_s',
      13: 'general_r',
      14: 'general_i',
      15: 'general_s',
      16: 'general_a',
      17: 'general_r',
      18: 'general_s',
      19: 'general_r',
      20: 'general_i',
      21: 'general_e',
      22: 'general_a',
      23: 'general_a',
      24: 'general_s',
      25: 'general_i',
      26: 'general_e',
      27: 'general_e',
      28: 'general_c',
      29: 'general_r',
      30: 'general_e',
      31: 'general_r',
      32: 'general_i',
      33: 'general_e',
      34: 'general_c',
      35: 'general_e',
      36: 'general_e',
      37: 'general_i',
      38: 'general_i',
      39: 'general_c',
      40: 'general_c',
      41: 'general_s',
      42: 'general_e',
      43: 'general_i',
      44: 'general_i',
      45: 'general_c',
      46: 'general_a',
      47: 'general_s',
      48: 'general_a',
      49: 'general_c',
      50: 'general_i',
      51: 'general_i',
      52: 'general_e',
      53: 'general_a',
      54: 'general_s',
      55: 'general_c',
      56: 'general_c',
      57: 'general_r',
      58: 'general_c',
      59: 'general_a',
      60: 'general_s',
    },
    cj: {
      1: 'general_a',
      2: 'general_r',
      3: 'general_e',
      4: 'general_c',
      5: 'general_s',
      6: 'general_r',
      7: 'general_a',
      8: 'general_r',
      9: 'general_s',
      10: 'general_e',
      11: 'general_a',
      12: 'general_s',
      13: 'general_s',
      14: 'general_r',
      15: 'general_i',
      16: 'general_s',
      17: 'general_a',
      18: 'general_r',
      19: 'general_s',
      20: 'general_r',
      21: 'general_i',
      22: 'general_e',
      23: 'general_a',
      24: 'general_a',
      25: 'general_s',
      26: 'general_i',
      27: 'general_e',
      28: 'general_e',
      29: 'general_c',
      30: 'general_r',
      31: 'general_e',
      32: 'general_r',
      33: 'general_i',
      34: 'general_e',
      35: 'general_c',
      36: 'general_e',
      37: 'general_e',
      38: 'general_i',
      39: 'general_i',
      40: 'general_c',
      41: 'general_c',
      42: 'general_s',
      43: 'general_e',
      44: 'general_i',
      45: 'general_i',
      46: 'general_c',
      47: 'general_a',
      48: 'general_s',
      49: 'general_a',
      50: 'general_c',
      51: 'general_i',
      52: 'general_i',
      53: 'general_e',
      54: 'general_s',
      55: 'general_c',
      56: 'general_c',
      57: 'general_r',
      58: 'general_c',
      59: 'general_a',
      60: 'general_s',
    },
    care: {
      1: 'general_s',
      2: 'general_a',
      3: 'general_s',
      4: 'general_r',
      5: 'general_s',
      6: 'general_i',
      7: 'general_s',
      8: 'general_e',
      9: 'general_s',
      10: 'general_a',
      11: 'general_e',
      12: 'general_a',
      13: 'general_c',
      14: 'general_i',
      15: 'general_e',
      16: 'general_s',
      17: 'general_a',
      18: 'general_c',
      19: 'general_r',
      20: 'general_i',
      21: 'general_s',
      22: 'general_s',
      23: 'general_c',
      24: 'general_i',
      25: 'general_a',
      26: 'general_e',
      27: 'general_c',
      28: 'general_e',
      29: 'general_r',
      30: 'general_a',
      31: 'general_i',
      32: 'general_c',
      33: 'general_a',
      34: 'general_s',
      35: 'general_s',
      36: 'general_s',
      37: 'general_s',
      38: 'general_e',
      39: 'general_i',
      40: 'general_c',
      41: 'general_r',
      42: 'general_i',
      43: 'general_i',
      44: 'general_c',
      45: 'general_c',
      46: 'general_c',
      47: 'general_c',
      48: 'general_a',
      49: 'general_e',
      50: 'general_i',
      51: 'general_i',
      52: 'general_s',
      53: 'general_r',
      54: 'general_c',
      55: 'general_r',
      56: 'general_a',
      57: 'general_s',
      58: 'general_a',
      59: 'general_s',
      60: 'general_a',
    },
    goal: {
      1: 'goal_s',
      2: 'goal_c',
      3: 'goal_e',
      4: 'goal_s',
      5: 'goal_e',
      6: 'goal_c',
      7: 'goal_s',
      8: 'goal_i',
      9: 'goal_c',
      10: 'goal_e',
      11: 'goal_s',
      12: 'goal_c',
      13: 'goal_e',
      14: 'goal_c',
      15: 'goal_a',
      16: 'goal_i',
      17: 'goal_s',
      18: 'goal_e',
      19: 'goal_c',
      20: 'goal_c',
      21: 'goal_a',
      22: 'goal_s',
      23: 'goal_i',
      24: 'goal_s',
      25: 'goal_e',
      26: 'goal_a',
      27: 'goal_c',
      28: 'goal_i',
      29: 'goal_a',
      30: 'goal_e',
      31: 'goal_c',
      32: 'goal_s',
      33: 'goal_c',
      34: 'goal_a',
      35: 'goal_e',
      36: 'goal_s',
      37: 'goal_e',
      38: 'goal_s',
      39: 'goal_a',
      40: 'goal_e',
      41: 'goal_a',
      42: 'goal_s',
      43: 'goal_s',
      44: 'goal_a',
      45: 'goal_r',
      46: 'goal_e',
      47: 'goal_a',
      48: 'goal_s',
      49: 'goal_c',
      50: 'goal_i',
      51: 'goal_r',
      52: 'goal_a',
      53: 'goal_e',
      54: 'goal_e',
      55: 'goal_a',
      56: 'goal_a',
      57: 'goal_e',
      58: 'goal_a',
      59: 'goal_e',
      60: 'goal_e',
      61: 'goal_a',
      62: 'goal_e',
      63: 'goal_a',
      64: 'goal_e',
      65: 'goal_a',
      66: 'goal_e',
      67: 'goal_e',
      68: 'goal_e',
      69: 'goal_e',
      70: 'goal_e',
      71: 'goal_e',
      72: 'goal_e',
      73: 'goal_e',
      74: 'goal_e',
      75: 'goal_e',
      76: 'goal_e',
      77: 'goal_a',
      78: 'goal_a',
      79: 'goal_a',
      80: 'goal_a',
      81: 'goal_i',
      82: 'goal_i',
      83: 'goal_i',
      84: 'goal_i',
      85: 'goal_i',
      86: 'goal_i',
      87: 'goal_i',
      88: 'goal_i',
      89: 'goal_r',
      90: 'goal_r',
      91: 'goal_r',
      92: 'goal_r',
      93: 'goal_r',
      94: 'goal_r',
      95: 'goal_r',
      96: 'goal_r',
      97: 'goal_r',
      98: 'goal_r',
      99: 'goal_r',
      100: 'goal_r',
    }
  };

  // 根據前綴返回對應的封面圖片
  return coverMapping[prefix] && coverMapping[prefix][index] ? coverMapping[prefix][index] : null;
}

export {
  careImages,
  leImages,
  ljImages,
  ceImages,
  cjImages,
  goalImages,
  combineAndShuffle,
  getCardImageName,
  getCardCoverImage
}
